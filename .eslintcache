[{"K:\\React JS\\Hospital Management System\\src\\index.js":"1","K:\\React JS\\Hospital Management System\\src\\reportWebVitals.js":"2","K:\\React JS\\Hospital Management System\\src\\Components\\App\\index.js":"3","K:\\React JS\\Hospital Management System\\src\\Components\\App\\App.js":"4","K:\\React JS\\Hospital Management System\\src\\Components\\Header\\index.js":"5","K:\\React JS\\Hospital Management System\\src\\Components\\Header\\Header.js":"6","K:\\React JS\\Hospital Management System\\src\\Components\\Admin\\index.js":"7","K:\\React JS\\Hospital Management System\\src\\Components\\Admin\\Admin.js":"8","K:\\React JS\\Hospital Management System\\src\\Components\\Login\\index.js":"9","K:\\React JS\\Hospital Management System\\src\\Components\\Login\\Login.js":"10","K:\\React JS\\Hospital Management System\\src\\Components\\Admin\\DoctorModal.js":"11","K:\\React JS\\Hospital Management System\\src\\Components\\Admin\\ConfirmModal.js":"12","K:\\React JS\\Hospital Management System\\src\\Components\\Doctor\\index.js":"13","K:\\React JS\\Hospital Management System\\src\\Components\\Doctor\\Doctor.js":"14","K:\\React JS\\Hospital Management System\\src\\Components\\Doctor\\ConfirmModal.js":"15","K:\\React JS\\Hospital Management System\\src\\Components\\Patients\\index.js":"16","K:\\React JS\\Hospital Management System\\src\\Components\\Patients\\Patients.js":"17","K:\\React JS\\Hospital Management System\\src\\Components\\Patients\\AppointmentModal.js":"18","K:\\React JS\\Hospital Management System\\src\\Components\\Home\\index.js":"19","K:\\React JS\\Hospital Management System\\src\\Components\\Home\\Home.js":"20","K:\\React JS\\Hospital Management System\\src\\Components\\Contact\\index.js":"21","K:\\React JS\\Hospital Management System\\src\\Components\\Contact\\Contact.js":"22","K:\\React JS\\Hospital Management System\\src\\Components\\About\\index.js":"23","K:\\React JS\\Hospital Management System\\src\\Components\\About\\About.js":"24","K:\\React JS\\Hospital Management System\\src\\Redux\\index.js":"25","K:\\React JS\\Hospital Management System\\src\\Redux\\Reducers.js":"26","K:\\React JS\\Hospital Management System\\src\\Redux\\ActionTypes.js":"27","K:\\React JS\\Hospital Management System\\src\\Redux\\store.js":"28","K:\\React JS\\Hospital Management System\\src\\Redux\\Actions.js":"29"},{"size":696,"mtime":1608731431889,"results":"30","hashOfConfig":"31"},{"size":375,"mtime":1608282001292,"results":"32","hashOfConfig":"31"},{"size":47,"mtime":1608282090179,"results":"33","hashOfConfig":"31"},{"size":1494,"mtime":1608732453758,"results":"34","hashOfConfig":"31"},{"size":56,"mtime":1608283015821,"results":"35","hashOfConfig":"31"},{"size":3559,"mtime":1608738570944,"results":"36","hashOfConfig":"31"},{"size":53,"mtime":1608284101117,"results":"37","hashOfConfig":"31"},{"size":4128,"mtime":1608739116137,"results":"38","hashOfConfig":"31"},{"size":55,"mtime":1608286356651,"results":"39","hashOfConfig":"31"},{"size":5701,"mtime":1608740899786,"results":"40","hashOfConfig":"31"},{"size":3290,"mtime":1608636068579,"results":"41","hashOfConfig":"31"},{"size":684,"mtime":1608291834003,"results":"42","hashOfConfig":"31"},{"size":56,"mtime":1608292164017,"results":"43","hashOfConfig":"31"},{"size":3887,"mtime":1608739123257,"results":"44","hashOfConfig":"31"},{"size":684,"mtime":1608292975168,"results":"45","hashOfConfig":"31"},{"size":62,"mtime":1608293732531,"results":"46","hashOfConfig":"31"},{"size":3771,"mtime":1608740605459,"results":"47","hashOfConfig":"31"},{"size":2765,"mtime":1608656205040,"results":"48","hashOfConfig":"31"},{"size":50,"mtime":1608297035430,"results":"49","hashOfConfig":"31"},{"size":604,"mtime":1608298130595,"results":"50","hashOfConfig":"31"},{"size":59,"mtime":1608297236188,"results":"51","hashOfConfig":"31"},{"size":1174,"mtime":1608299241389,"results":"52","hashOfConfig":"31"},{"size":53,"mtime":1608297157330,"results":"53","hashOfConfig":"31"},{"size":535,"mtime":1608306603130,"results":"54","hashOfConfig":"31"},{"size":55,"mtime":1608731313290,"results":"55","hashOfConfig":"31"},{"size":1164,"mtime":1608733873467,"results":"56","hashOfConfig":"31"},{"size":235,"mtime":1608733804515,"results":"57","hashOfConfig":"31"},{"size":298,"mtime":1608731298202,"results":"58","hashOfConfig":"31"},{"size":1976,"mtime":1608733934118,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1dklunm",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"K:\\React JS\\Hospital Management System\\src\\index.js",[],["126","127"],"K:\\React JS\\Hospital Management System\\src\\reportWebVitals.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\App\\index.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\App\\App.js",["128"],"import \"./App.css\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Login from \"../Login\";\r\nimport Header from \"../Header\";\r\nimport Admin from \"../Admin\";\r\nimport Doctor from \"../Doctor\";\r\nimport Patients from \"../Patients\";\r\nimport Home from \"../Home\";\r\nimport Contact from \"../Contact\";\r\nimport About from \"../About\";\r\nimport { useEffect } from \"react\";\r\nimport { init } from \"../../Redux/Actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(init());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/patient\">\r\n            <Header />\r\n            <Patients />\r\n          </Route>\r\n          <Route exact path=\"/doctor\">\r\n            <Header />\r\n            <Doctor />\r\n          </Route>\r\n          <Route exact path=\"/admin\">\r\n            <Header />\r\n            <Admin />\r\n          </Route>\r\n          <Route exact path=\"/login\">\r\n            <Header />\r\n            <Login />\r\n          </Route>\r\n          <Route exact path=\"/contact\">\r\n            <Header />\r\n            <Contact />\r\n          </Route>\r\n          <Route exact path=\"/about\">\r\n            <Header />\r\n            <About />\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            <Header />\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","K:\\React JS\\Hospital Management System\\src\\Components\\Header\\index.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\Header\\Header.js",["129","130","131","132","133","134","135","136"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport ContactPhoneIcon from \"@material-ui/icons/ContactPhone\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport LocalHospitalIcon from \"@material-ui/icons/LocalHospital\";\r\nimport AccessibleIcon from \"@material-ui/icons/Accessible\";\r\nimport SupervisorAccountIcon from \"@material-ui/icons/SupervisorAccount\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useStore, useDispatch } from \"react-redux\";\r\nimport { logout } from \"../../Redux/Actions\";\r\n\r\nfunction Header() {\r\n  const store = useStore();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const usr = store.getState()?.user;\r\n    setUser(usr);\r\n\r\n    const subscription = store.subscribe(() => {\r\n      const usr = store.getState()?.user;\r\n      setUser(usr);\r\n    });\r\n\r\n    return () => {\r\n      subscription();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const type = user.userType;\r\n      if (type == 1) {\r\n        history.push(\"/admin\");\r\n      } else if (type == 2) {\r\n        history.push(\"/doctor\");\r\n      } else if (type == 3) {\r\n        history.push(\"/patient\");\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div className=\"Header\">\r\n      Coder's Hospital Management System\r\n      <div className=\"navlinks\">\r\n        <Link to=\"/\">\r\n          <div className=\"link\">\r\n            <HomeIcon className=\"icon\" />\r\n            Home\r\n          </div>\r\n        </Link>\r\n        <Link to=\"/about\">\r\n          <div className=\"link\">\r\n            <InfoIcon className=\"icon\" />\r\n            About\r\n          </div>\r\n        </Link>\r\n        <Link to=\"/contact\">\r\n          <div className=\"link\">\r\n            <ContactPhoneIcon className=\"icon\" />\r\n            Contact us\r\n          </div>\r\n        </Link>\r\n        {user ? null : DefaultList()}\r\n        {user?.userType == 1 ? AdminLoggedIn() : null}\r\n        {user?.userType == 2 ? DoctorsLoggedIn() : null}\r\n        {user?.userType == 3 ? PatientLoggedIn() : null}\r\n        {user?.userType ? (\r\n          <div\r\n            className=\"link\"\r\n            onClick={() => {\r\n              dispatch(logout());\r\n              history.push(\"/login\");\r\n            }}\r\n          >\r\n            <ExitToAppIcon className=\"icon\" />\r\n            Logout\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst DefaultList = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/login\">\r\n        <div className=\"link\">\r\n          <LockOpenIcon className=\"icon\" />\r\n          Login\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nconst DoctorsLoggedIn = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/doctor\">\r\n        <div className=\"link\">\r\n          <LocalHospitalIcon className=\"icon\" />\r\n          Dashboard\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nconst PatientLoggedIn = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/patient\">\r\n        <div className=\"link\">\r\n          <AccessibleIcon className=\"icon\" />\r\n          Dashboard\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nconst AdminLoggedIn = () => {\r\n  return (\r\n    <>\r\n      <Link to=\"/admin\">\r\n        <div className=\"link\">\r\n          <SupervisorAccountIcon className=\"icon\" />\r\n          Dashboard\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","K:\\React JS\\Hospital Management System\\src\\Components\\Admin\\index.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\Admin\\Admin.js",["137","138","139","140","141"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Admin.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport DoctorModal from \"./DoctorModal\";\r\nimport ConfirmModal from \"./ConfirmModal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStore } from \"react-redux\";\r\n\r\nfunction Admin() {\r\n  const store = useStore();\r\n  const history = useHistory();\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const usr = store.getState()?.user;\r\n    setUser(usr);\r\n\r\n    const subscription = store.subscribe(() => {\r\n      const usr = store.getState()?.user;\r\n      setUser(usr);\r\n    });\r\n\r\n    return () => {\r\n      subscription();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const type = user.userType;\r\n      if (type == 1) {\r\n        history.push(\"/admin\");\r\n      } else if (type == 2) {\r\n        history.push(\"/doctor\");\r\n      } else if (type == 3) {\r\n        history.push(\"/patient\");\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  const [reload, setReload] = useState(null);\r\n  useEffect(() => {\r\n    fetch(\"http://localhost/users/byType.php?type=2\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const docs = [];\r\n        data.forEach((doctor) => {\r\n          const { id, name, email, phoneNumber } = doctor;\r\n          docs.push({\r\n            id,\r\n            name,\r\n            email,\r\n            phoneNumber,\r\n          });\r\n        });\r\n        setDoctors(docs);\r\n      });\r\n  }, [reload]);\r\n\r\n  // Handle Doctor Modal\r\n  const [show, setShow] = useState(false);\r\n  const addDoctorHandleSubmit = (data) => {\r\n    const { name, email, password, phoneNumber } = data;\r\n    fetch(\"http://localhost/users/add.php\", {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        name,\r\n        email,\r\n        password,\r\n        phoneNumber,\r\n        userType: 2,\r\n      }),\r\n    }).then(() => {\r\n      setReload(Math.random());\r\n    });\r\n    setShow(false);\r\n  };\r\n\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [current, setCurrent] = useState(null);\r\n  const deleteDoctor = () => {\r\n    fetch(`http://localhost/users/delete.php?id=${current}`, {\r\n      method: \"DELETE\",\r\n    }).then(() => {\r\n      setReload(Math.random());\r\n    });\r\n    setShowConfirm(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"addIcon\">\r\n        <Fab color=\"secondary\" aria-label=\"add\" onClick={() => setShow(true)}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n      <DoctorModal\r\n        show={show}\r\n        onHide={() => setShow(false)}\r\n        onSubmit={addDoctorHandleSubmit}\r\n      />\r\n      <ConfirmModal\r\n        show={showConfirm}\r\n        handleClose={() => setShowConfirm(false)}\r\n        confirm={deleteDoctor}\r\n      />\r\n      <div className=\"Admin\">\r\n        <h3>Admin Dashboard</h3>\r\n        <br />\r\n        <Table striped bordered hover>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Phone Number</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {doctors.map((value, index) => {\r\n              return (\r\n                <tr key={index}>\r\n                  <td>{index + 1}</td>\r\n                  <td>{value.id}</td>\r\n                  <td>{value.name}</td>\r\n                  <td>{value.email}</td>\r\n                  <td>{value.phoneNumber}</td>\r\n                  <td align=\"center\">\r\n                    <DeleteIcon\r\n                      style={{ cursor: \"pointer\" }}\r\n                      onClick={() => {\r\n                        setCurrent(value.id);\r\n                        setShowConfirm(true);\r\n                      }}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n","K:\\React JS\\Hospital Management System\\src\\Components\\Login\\index.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\Login\\Login.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\Admin\\DoctorModal.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\Admin\\ConfirmModal.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\Doctor\\index.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\Doctor\\Doctor.js",["142","143","144","145","146"],"import React, { useEffect, useState } from \"react\";\r\nimport \"./Doctor.css\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport CheckIcon from \"@material-ui/icons/Check\";\r\nimport CallIcon from \"@material-ui/icons/Call\";\r\nimport HourglassFullIcon from \"@material-ui/icons/HourglassFull\";\r\nimport ConfirmModal from \"./ConfirmModal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStore } from \"react-redux\";\r\n\r\nfunction Doctor() {\r\n  const store = useStore();\r\n  const history = useHistory();\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const usr = store.getState()?.user;\r\n    setUser(usr);\r\n\r\n    const subscription = store.subscribe(() => {\r\n      const usr = store.getState()?.user;\r\n      setUser(usr);\r\n    });\r\n\r\n    return () => {\r\n      subscription();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const type = user.userType;\r\n      if (type == 1) {\r\n        history.push(\"/admin\");\r\n      } else if (type == 2) {\r\n        history.push(\"/doctor\");\r\n      } else if (type == 3) {\r\n        history.push(\"/patient\");\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  const [patients, setPatients] = useState([]);\r\n  const [trigger, setTrigger] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost/appointments/appointments.php?id=1\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const patientsList = [];\r\n\r\n        data.forEach((value) => {\r\n          const { id, name, phoneNumber } = value;\r\n          patientsList.push({\r\n            id,\r\n            name,\r\n            phoneNumber,\r\n          });\r\n        });\r\n        setPatients(patientsList);\r\n      });\r\n  }, [trigger]);\r\n\r\n  const call = (phoneNumber) => {\r\n    window.location.href = `tel:${phoneNumber}`;\r\n  };\r\n\r\n  const [showConfirm, setShowConfirm] = useState(false);\r\n  const [current, setCurrent] = useState(null);\r\n  const deleteAppointment = () => {\r\n    const id = current;\r\n\r\n    fetch(\"http://localhost/appointments/status.php\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        id,\r\n        status: 3,\r\n      }),\r\n    }).then(() => {\r\n      setTrigger(Math.random());\r\n    });\r\n\r\n    setShowConfirm(false);\r\n  };\r\n\r\n  const done = (id) => {\r\n    fetch(\"http://localhost/appointments/status.php\", {\r\n      method: \"PUT\",\r\n      body: JSON.stringify({\r\n        id,\r\n        status: 2,\r\n      }),\r\n    }).then(() => {\r\n      setTrigger(Math.random());\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"Doctor\">\r\n      <ConfirmModal\r\n        show={showConfirm}\r\n        handleClose={() => setShowConfirm(false)}\r\n        confirm={deleteAppointment}\r\n      />\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Patient Name</th>\r\n            <th>Phone Number</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {patients.map((value, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{value.name}</td>\r\n                <td>{value.phoneNumber}</td>\r\n                <td align=\"center\">\r\n                  <CheckIcon\r\n                    className=\"icons\"\r\n                    onClick={() => {\r\n                      done(value.id);\r\n                    }}\r\n                  />\r\n                  <CallIcon\r\n                    className=\"icons\"\r\n                    onClick={() => call(value.phoneNumber)}\r\n                  />\r\n                  <HourglassFullIcon\r\n                    className=\"icons\"\r\n                    onClick={() => {\r\n                      setCurrent(value.id);\r\n                      setShowConfirm(true);\r\n                    }}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Doctor;\r\n","K:\\React JS\\Hospital Management System\\src\\Components\\Doctor\\ConfirmModal.js",[],["147","148"],"K:\\React JS\\Hospital Management System\\src\\Components\\Patients\\index.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\Patients\\Patients.js",["149","150","151","152","153"],"import React, { useState } from \"react\";\r\nimport \"./Patients.css\";\r\nimport { Table, Alert } from \"react-bootstrap\";\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useEffect } from \"react\";\r\nimport AppointmentModal from \"./AppointmentModal\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStore } from \"react-redux\";\r\n\r\nfunction Patients() {\r\n  const store = useStore();\r\n  const history = useHistory();\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const usr = store.getState()?.user;\r\n    setUser(usr);\r\n\r\n    const subscription = store.subscribe(() => {\r\n      const usr = store.getState()?.user;\r\n      setUser(usr);\r\n    });\r\n\r\n    return () => {\r\n      subscription();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      const type = user.userType;\r\n      if (type == 1) {\r\n        history.push(\"/admin\");\r\n      } else if (type == 2) {\r\n        history.push(\"/doctor\");\r\n      } else if (type == 3) {\r\n        history.push(\"/patient\");\r\n      }\r\n    }\r\n  }, [user]);\r\n\r\n  const [appointments, setAppointements] = useState([]);\r\n  const [trigger, setTrigger] = useState();\r\n\r\n  useEffect(() => {\r\n    if (user?.id) {\r\n      fetch(`http://localhost/appointments/byUser.php?id=${user.id}`)\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          const apps = [];\r\n          data.forEach((val, index) => {\r\n            let { id, appointmentDate, name, status } = val;\r\n            appointmentDate = appointmentDate.split(\"-\").reverse().join(\"-\");\r\n            apps.push({\r\n              id,\r\n              date: appointmentDate,\r\n              doctorName: name,\r\n              status,\r\n            });\r\n          });\r\n          setAppointements(apps);\r\n        });\r\n    }\r\n  }, [trigger, user?.id]);\r\n\r\n  const [show, setShow] = useState(false);\r\n  const bookAnAppointment = (data) => {\r\n    const { doctorId, date } = data;\r\n\r\n    if (date && doctorId) {\r\n      fetch(\"http://localhost/appointments/add.php\", {\r\n        method: \"POST\",\r\n        body: JSON.stringify({\r\n          doctorId,\r\n          appointmentDate: date,\r\n          patientId: user.id,\r\n        }),\r\n      }).then(() => {\r\n        setTrigger(Math.random());\r\n      });\r\n    }\r\n\r\n    setShow(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"Patients\">\r\n      <AppointmentModal\r\n        show={show}\r\n        onHide={() => setShow(false)}\r\n        onSubmit={bookAnAppointment}\r\n      />\r\n      <h3>Appointments</h3>\r\n      <div className=\"addIcon\">\r\n        <Fab color=\"secondary\" aria-label=\"add\" onClick={() => setShow(true)}>\r\n          <AddIcon />\r\n        </Fab>\r\n      </div>\r\n      <Table striped bordered hover>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Appointment ID</th>\r\n            <th>Appointment Date</th>\r\n            <th>Appointment Doctor</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {appointments.map((value, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td>{index + 1}</td>\r\n                <td>{value.id}</td>\r\n                <td>{value.date}</td>\r\n                <td>{value.doctorName}</td>\r\n                <td>{getStatus(value.status)}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst getStatus = (status) => {\r\n  switch (status) {\r\n    case 2:\r\n      return <Alert variant={\"success\"}>Got Checked.</Alert>;\r\n    case 1:\r\n      return <Alert variant={\"warning\"}>Upcoming.</Alert>;\r\n    case 3:\r\n      return <Alert variant={\"danger\"}>Missed Appointment.</Alert>;\r\n    default:\r\n      return <Alert>Unknown Status</Alert>;\r\n  }\r\n};\r\n\r\nexport default Patients;\r\n","K:\\React JS\\Hospital Management System\\src\\Components\\Patients\\AppointmentModal.js",["154"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal, Button, Form } from \"react-bootstrap\";\r\n\r\nfunction DoctorModal(props) {\r\n  const INITIAL_STATE = {\r\n    date: null,\r\n    doctorId: null,\r\n  };\r\n\r\n  const [state, setState] = useState(INITIAL_STATE);\r\n\r\n  const [doctors, setDoctors] = useState([]);\r\n  useEffect(() => {\r\n    fetch(\"http://localhost/users/byType.php?type=2\")\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        const docs = [];\r\n        data.forEach((doctor, index) => {\r\n          const { id, name } = doctor;\r\n          if (index === 0) {\r\n            setState({\r\n              ...state,\r\n              doctorId: id,\r\n            });\r\n          }\r\n          docs.push({\r\n            id,\r\n            name,\r\n          });\r\n        });\r\n        setDoctors(docs);\r\n      });\r\n  }, []);\r\n  return (\r\n    <Modal\r\n      {...props}\r\n      size=\"lg\"\r\n      aria-labelledby=\"contained-modal-title-vcenter\"\r\n      centered\r\n    >\r\n      <Modal.Header closeButton>\r\n        <Modal.Title id=\"contained-modal-title-vcenter\">\r\n          Book an Appointment\r\n        </Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <Form.Group controlId=\"name\">\r\n            <Form.Label>Select Appointment Date</Form.Label>\r\n            <Form.Control\r\n              type=\"date\"\r\n              value={state.date}\r\n              onChange={(event) => {\r\n                setState({\r\n                  ...state,\r\n                  date: event.target.value,\r\n                });\r\n              }}\r\n              name=\"date\"\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId=\"doctors\">\r\n            <Form.Label>Select Doctor</Form.Label>\r\n            <Form.Control\r\n              as=\"select\"\r\n              name=\"doctorId\"\r\n              onChange={(event) => {\r\n                setState({\r\n                  ...state,\r\n                  doctorId: event.target.value,\r\n                });\r\n              }}\r\n              value={state.doctorId}\r\n            >\r\n              {doctors.map((value, index) => {\r\n                return (\r\n                  <option value={value.id} key={index}>\r\n                    {value.name}\r\n                  </option>\r\n                );\r\n              })}\r\n            </Form.Control>\r\n          </Form.Group>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button\r\n          variant=\"primary\"\r\n          onClick={() => {\r\n            props.onSubmit(state);\r\n          }}\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            props.onHide();\r\n          }}\r\n        >\r\n          Close\r\n        </Button>\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default DoctorModal;\r\n","K:\\React JS\\Hospital Management System\\src\\Components\\Home\\index.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\Home\\Home.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\Contact\\index.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\Contact\\Contact.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\About\\index.js",[],"K:\\React JS\\Hospital Management System\\src\\Components\\About\\About.js",[],"K:\\React JS\\Hospital Management System\\src\\Redux\\index.js",[],"K:\\React JS\\Hospital Management System\\src\\Redux\\Reducers.js",[],"K:\\React JS\\Hospital Management System\\src\\Redux\\ActionTypes.js",[],"K:\\React JS\\Hospital Management System\\src\\Redux\\store.js",[],"K:\\React JS\\Hospital Management System\\src\\Redux\\Actions.js",[],{"ruleId":"155","replacedBy":"156"},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","severity":1,"message":"160","line":19,"column":6,"nodeType":"161","endLine":19,"endColumn":8,"suggestions":"162"},{"ruleId":"159","severity":1,"message":"163","line":33,"column":6,"nodeType":"161","endLine":33,"endColumn":8,"suggestions":"164"},{"ruleId":"165","severity":1,"message":"166","line":38,"column":16,"nodeType":"167","messageId":"168","endLine":38,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":40,"column":23,"nodeType":"167","messageId":"168","endLine":40,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":42,"column":23,"nodeType":"167","messageId":"168","endLine":42,"endColumn":25},{"ruleId":"159","severity":1,"message":"169","line":46,"column":6,"nodeType":"161","endLine":46,"endColumn":12,"suggestions":"170"},{"ruleId":"165","severity":1,"message":"166","line":71,"column":25,"nodeType":"167","messageId":"168","endLine":71,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":72,"column":25,"nodeType":"167","messageId":"168","endLine":72,"endColumn":27},{"ruleId":"165","severity":1,"message":"166","line":73,"column":25,"nodeType":"167","messageId":"168","endLine":73,"endColumn":27},{"ruleId":"159","severity":1,"message":"163","line":29,"column":6,"nodeType":"161","endLine":29,"endColumn":8,"suggestions":"171"},{"ruleId":"165","severity":1,"message":"166","line":34,"column":16,"nodeType":"167","messageId":"168","endLine":34,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":36,"column":23,"nodeType":"167","messageId":"168","endLine":36,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":38,"column":23,"nodeType":"167","messageId":"168","endLine":38,"endColumn":25},{"ruleId":"159","severity":1,"message":"169","line":42,"column":6,"nodeType":"161","endLine":42,"endColumn":12,"suggestions":"172"},{"ruleId":"159","severity":1,"message":"163","line":28,"column":6,"nodeType":"161","endLine":28,"endColumn":8,"suggestions":"173"},{"ruleId":"165","severity":1,"message":"166","line":33,"column":16,"nodeType":"167","messageId":"168","endLine":33,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":35,"column":23,"nodeType":"167","messageId":"168","endLine":35,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":37,"column":23,"nodeType":"167","messageId":"168","endLine":37,"endColumn":25},{"ruleId":"159","severity":1,"message":"169","line":41,"column":6,"nodeType":"161","endLine":41,"endColumn":12,"suggestions":"174"},{"ruleId":"155","replacedBy":"175"},{"ruleId":"157","replacedBy":"176"},{"ruleId":"159","severity":1,"message":"163","line":28,"column":6,"nodeType":"161","endLine":28,"endColumn":8,"suggestions":"177"},{"ruleId":"165","severity":1,"message":"166","line":33,"column":16,"nodeType":"167","messageId":"168","endLine":33,"endColumn":18},{"ruleId":"165","severity":1,"message":"166","line":35,"column":23,"nodeType":"167","messageId":"168","endLine":35,"endColumn":25},{"ruleId":"165","severity":1,"message":"166","line":37,"column":23,"nodeType":"167","messageId":"168","endLine":37,"endColumn":25},{"ruleId":"159","severity":1,"message":"169","line":41,"column":6,"nodeType":"161","endLine":41,"endColumn":12,"suggestions":"178"},{"ruleId":"159","severity":1,"message":"179","line":33,"column":6,"nodeType":"161","endLine":33,"endColumn":8,"suggestions":"180"},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["183"],"React Hook useEffect has a missing dependency: 'store'. Either include it or remove the dependency array.",["184"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["185"],["186"],["187"],["188"],["189"],["181"],["182"],["190"],["191"],"React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.",["192"],"no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},{"desc":"197","fix":"198"},{"desc":"195","fix":"199"},{"desc":"197","fix":"200"},{"desc":"195","fix":"201"},{"desc":"197","fix":"202"},{"desc":"195","fix":"203"},{"desc":"197","fix":"204"},{"desc":"205","fix":"206"},"Update the dependencies array to be: [dispatch]",{"range":"207","text":"208"},"Update the dependencies array to be: [store]",{"range":"209","text":"210"},"Update the dependencies array to be: [history, user]",{"range":"211","text":"212"},{"range":"213","text":"210"},{"range":"214","text":"212"},{"range":"215","text":"210"},{"range":"216","text":"212"},{"range":"217","text":"210"},{"range":"218","text":"212"},"Update the dependencies array to be: [state]",{"range":"219","text":"220"},[586,588],"[dispatch]",[1143,1145],"[store]",[1433,1439],"[history, user]",[828,830],[1118,1124],[813,815],[1103,1109],[779,781],[1069,1075],[830,832],"[state]"]